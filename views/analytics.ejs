<!DOCTYPE html>
<html lang="en">
<%- include('partials/head', {title: 'Analytics Dashboard'}) %>

<body>
    <%- include('partials/navbar', {currentPage: 'analytics'}) %>

    <div class="container-fluid mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="h3 mb-2 text-gray-800">
                            <i class="fas fa-table me-2"></i>
                            Analytics Dashboard
                        </h1>
                        <p class="text-muted">Comprehensive business intelligence and performance metrics in table format</p>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary" onclick="refreshData()">
                            <i class="fas fa-sync-alt me-1"></i>
                            Refresh
                        </button>
                        <button class="btn btn-success" onclick="exportData('csv')">
                            <i class="fas fa-download me-1"></i>
                            Export CSV
                        </button>
                        <button class="btn btn-info" onclick="exportData('json')">
                            <i class="fas fa-file-export me-1"></i>
                            Export JSON
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Advanced Filters -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-3">
                                <label for="periodSelector" class="form-label">Time Period</label>
                                <select class="form-select" id="periodSelector" onchange="changePeriod()">
                                    <option value="7" <%= filters.period === 7 ? 'selected' : '' %>>Last 7 Days</option>
                                    <option value="30" <%= filters.period === 30 ? 'selected' : '' %>>Last 30 Days</option>
                                    <option value="90" <%= filters.period === 90 ? 'selected' : '' %>>Last 90 Days</option>
                                    <option value="365" <%= filters.period === 365 ? 'selected' : '' %>>Last Year</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="categoryFilter" class="form-label">Category</label>
                                <select class="form-select" id="categoryFilter" onchange="applyFilters()">
                                    <option value="all">All Categories</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="metricSelector" class="form-label">Primary Metric</label>
                                <select class="form-select" id="metricSelector" onchange="changeMetric()">
                                    <option value="revenue">Revenue</option>
                                    <option value="units">Units Sold</option>
                                    <option value="profit">Profit Margin</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <div class="form-check form-switch mt-4">
                                    <input class="form-check-input" type="checkbox" id="comparisonToggle" 
                                           <%= filters.comparison ? 'checked' : '' %> onchange="toggleComparison()">
                                    <label class="form-check-label" for="comparisonToggle">
                                        Compare with Previous Period
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Summary Cards -->
        <div class="row mb-4">
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Total Revenue
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    $<%= (totalRevenue || 0).toLocaleString() %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Units Sold
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    <%= (totalUnitsSold || 0).toLocaleString() %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-shopping-cart fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-info shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                    Total Products
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    <%= totalProducts || 0 %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-box fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-warning shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                    Avg Order Value
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    $<%= averageOrderValue || '0.00' %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-calculator fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sales Trend Table -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Sales Trend Analysis</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" id="salesTrendTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Date</th>
                                        <th>Revenue ($)</th>
                                        <th>Units Sold</th>
                                        <th>Avg Order Value ($)</th>
                                        <th>Growth Rate (%)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% 
                                    let salesData = [];
                                    try {
                                        salesData = typeof salesTrendData === 'string' ? JSON.parse(salesTrendData) : salesTrendData;
                                        if (!salesData || !salesData.labels) salesData = { labels: [], revenue: [], units: [] };
                                    } catch (e) {
                                        console.error('Error parsing sales trend data:', e);
                                        salesData = { labels: [], revenue: [], units: [] };
                                    }
                                    
                                    for (let i = 0; i < (salesData.labels || []).length; i++) {
                                        const revenue = salesData.revenue ? salesData.revenue[i] || 0 : 0;
                                        const units = salesData.units ? salesData.units[i] || 0 : 0;
                                        const avgOrderValue = units > 0 ? (revenue / units) : 0;
                                        const prevRevenue = i > 0 && salesData.revenue ? salesData.revenue[i-1] || 0 : 0;
                                        const growthRate = prevRevenue > 0 ? ((revenue - prevRevenue) / prevRevenue * 100) : 0;
                                    %>
                                        <tr>
                                            <td><%= salesData.labels[i] || 'N/A' %></td>
                                            <td>$<%= revenue.toLocaleString() %></td>
                                            <td><%= units.toLocaleString() %></td>
                                            <td>$<%= avgOrderValue.toFixed(2) %></td>
                                            <td>
                                                <span class="<%= growthRate >= 0 ? 'text-success' : 'text-danger' %>">
                                                    <%= growthRate.toFixed(1) %>%
                                                </span>
                                            </td>
                                        </tr>
                                    <% } %>
                                    <% if ((salesData.labels || []).length === 0) { %>
                                        <tr>
                                            <td colspan="5" class="text-center text-muted">No sales data available</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Inventory Status Table -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Inventory Status</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Status</th>
                                        <th>Count</th>
                                        <th>Percentage</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% 
                                    let inventoryData = {};
                                    try {
                                        inventoryData = typeof inventoryStatusData === 'string' ? JSON.parse(inventoryStatusData) : inventoryStatusData;
                                        if (!inventoryData || !inventoryData.datasets) inventoryData = { datasets: [{ data: [0, 0, 0] }] };
                                    } catch (e) {
                                        console.error('Error parsing inventory data:', e);
                                        inventoryData = { datasets: [{ data: [0, 0, 0] }] };
                                    }
                                    
                                    const inventoryCounts = inventoryData.datasets && inventoryData.datasets[0] ? inventoryData.datasets[0].data : [0, 0, 0];
                                    const total = inventoryCounts.reduce((sum, count) => sum + count, 0);
                                    const statuses = ['In Stock', 'Low Stock', 'Out of Stock'];
                                    const colors = ['success', 'warning', 'danger'];
                                    
                                    for (let i = 0; i < 3; i++) {
                                        const count = inventoryCounts[i] || 0;
                                        const percentage = total > 0 ? (count / total * 100) : 0;
                                    %>
                                        <tr>
                                            <td>
                                                <span class="badge bg-<%= colors[i] %>"><%= statuses[i] %></span>
                                            </td>
                                            <td><%= count.toLocaleString() %></td>
                                            <td><%= percentage.toFixed(1) %>%</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Top Products Table -->
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Top Performing Products</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Rank</th>
                                        <th>Product</th>
                                        <th>Units Sold</th>
                                        <th>Revenue</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% 
                                    const topProducts = (topPerformingProducts || []).slice(0, 5);
                                    topProducts.forEach((product, index) => {
                                    %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td><%= product.sm_maker %> <%= product.sm_name %></td>
                                            <td><%= (product.total_sold || 0).toLocaleString() %></td>
                                            <td>$<%= (product.revenue || 0).toLocaleString() %></td>
                                        </tr>
                                    <% }); %>
                                    <% if (topProducts.length === 0) { %>
                                        <tr>
                                            <td colspan="4" class="text-center text-muted">No product data available</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Brand Performance Table -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Brand Performance Analysis</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" id="brandTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Brand</th>
                                        <th>Revenue ($)</th>
                                        <th>Units Sold</th>
                                        <th>Total Inventory</th>
                                        <th>Market Share (%)</th>
                                        <th>Avg Price ($)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% 
                                    const brandData = brandPerformance || [];
                                    const totalBrandRevenue = brandData.reduce((sum, brand) => sum + (parseFloat(brand.revenue) || 0), 0);
                                    
                                    brandData.forEach(brand => {
                                        const revenue = parseFloat(brand.revenue) || 0;
                                        const units = parseInt(brand.units_sold) || 0;
                                        const inventory = parseInt(brand.total_inventory) || 0;
                                        const marketShare = totalBrandRevenue > 0 ? (revenue / totalBrandRevenue * 100) : 0;
                                        const avgPrice = units > 0 ? (revenue / units) : 0;
                                    %>
                                        <tr>
                                            <td><strong><%= brand.brand || 'Unknown' %></strong></td>
                                            <td>$<%= revenue.toLocaleString() %></td>
                                            <td><%= units.toLocaleString() %></td>
                                            <td><%= inventory.toLocaleString() %></td>
                                            <td><%= marketShare.toFixed(1) %>%</td>
                                            <td>$<%= avgPrice.toFixed(2) %></td>
                                        </tr>
                                    <% }); %>
                                    <% if (brandData.length === 0) { %>
                                        <tr>
                                            <td colspan="6" class="text-center text-muted">No brand data available</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Financial Summary Table -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Financial Summary</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Metric</th>
                                        <th>Current Period</th>
                                        <th>Previous Period</th>
                                        <th>Change</th>
                                        <th>Trend</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td><strong>Total Revenue</strong></td>
                                        <td>$<%= (totalRevenue || 0).toLocaleString() %></td>
                                        <td>$<%= (previousRevenue || 0).toLocaleString() %></td>
                                        <td>
                                            <% 
                                            const revenueCurrent = parseFloat(totalRevenue) || 0;
                                            const revenuePrev = parseFloat(previousRevenue) || 0;
                                            const revenueChange = revenuePrev ? ((revenueCurrent - revenuePrev) / revenuePrev * 100) : 0;
                                            %>
                                            <span class="<%= revenueChange >= 0 ? 'text-success' : 'text-danger' %>">
                                                <%= revenueChange >= 0 ? '+' : '' %><%= revenueChange.toFixed(1) %>%
                                            </span>
                                        </td>
                                        <td>
                                            <i class="fas fa-arrow-<%= revenueChange >= 0 ? 'up text-success' : 'down text-danger' %>"></i>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Units Sold</strong></td>
                                        <td><%= (totalUnitsSold || 0).toLocaleString() %></td>
                                        <td><%= (previousUnitsSold || 0).toLocaleString() %></td>
                                        <td>
                                            <% 
                                            const unitsCurrent = parseInt(totalUnitsSold) || 0;
                                            const unitsPrev = parseInt(previousUnitsSold) || 0;
                                            const unitsChange = unitsPrev ? ((unitsCurrent - unitsPrev) / unitsPrev * 100) : 0;
                                            %>
                                            <span class="<%= unitsChange >= 0 ? 'text-success' : 'text-danger' %>">
                                                <%= unitsChange >= 0 ? '+' : '' %><%= unitsChange.toFixed(1) %>%
                                            </span>
                                        </td>
                                        <td>
                                            <i class="fas fa-arrow-<%= unitsChange >= 0 ? 'up text-success' : 'down text-danger' %>"></i>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Average Order Value</strong></td>
                                        <td>$<%= averageOrderValue || '0.00' %></td>
                                        <td>$<%= previousAverageOrderValue || '0.00' %></td>
                                        <td>
                                            <% 
                                            const aovCurrent = parseFloat(averageOrderValue) || 0;
                                            const aovPrevious = parseFloat(previousAverageOrderValue) || 0;
                                            const aovChange = aovPrevious ? ((aovCurrent - aovPrevious) / aovPrevious * 100) : 0;
                                            %>
                                            <span class="<%= aovChange >= 0 ? 'text-success' : 'text-danger' %>">
                                                <%= aovChange >= 0 ? '+' : '' %><%= aovChange.toFixed(1) %>%
                                            </span>
                                        </td>
                                        <td>
                                            <i class="fas fa-arrow-<%= aovChange >= 0 ? 'up text-success' : 'down text-danger' %>"></i>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <%- include('partials/footer') %>

    <!-- JavaScript for functionality -->
    <script>
        function refreshData() {
            window.location.reload();
        }

        function changePeriod() {
            const period = document.getElementById('periodSelector').value;
            const url = new URL(window.location);
            url.searchParams.set('period', period);
            window.location.href = url.toString();
        }

        function applyFilters() {
            const category = document.getElementById('categoryFilter').value;
            const url = new URL(window.location);
            url.searchParams.set('category', category);
            window.location.href = url.toString();
        }

        function changeMetric() {
            // This could be used to highlight different columns
            const metric = document.getElementById('metricSelector').value;
            console.log('Selected metric:', metric);
        }

        function toggleComparison() {
            const comparison = document.getElementById('comparisonToggle').checked;
            const url = new URL(window.location);
            url.searchParams.set('comparison', comparison);
            window.location.href = url.toString();
        }

        function exportData(format) {
            const period = document.getElementById('periodSelector').value;
            const url = `/api/analytics/export?period=${period}&format=${format}`;
            
            if (format === 'csv') {
                // For CSV, download as file
                const link = document.createElement('a');
                link.href = url;
                link.download = `analytics-${period}days.csv`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            } else {
                // For JSON, open in new tab
                window.open(url, '_blank');
            }
        }

        // Initialize DataTables for better table functionality
        document.addEventListener('DOMContentLoaded', function() {
            // You can add DataTables initialization here if the library is available
            console.log('Analytics dashboard loaded with table format');
        });
    </script>
</body>
</html>
